@model AP5PW_Helpdesk.ViewModels.Order.OrderEditVM
@{
    ViewData["Title"] = "Create order";
}

<h5 class="mb-4">@ViewData["Title"]</h5>

<form asp-action="Create" method="post" id="orderForm">
    <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

    <div class="row g-3">
        <div class="col-md-4">
            <label class="form-label">Company</label>
            <select asp-for="CompanyId" class="form-select" asp-items="ViewBag.CompanyList" id="CompanySelect">
                <option value="">-- select --</option>
            </select>
        </div>

        <div class="col-md-4">
            <label class="form-label">Warehouse</label>
            <select asp-for="WarehouseId" class="form-select" asp-items="ViewBag.WarehouseList" id="WarehouseSelect" data-selected="@Model.WarehouseId">
                <option value="">-- select --</option>
            </select>
        </div>

        <div class="col-md-4">
            <label class="form-label">User</label>
            <select asp-for="UserId" class="form-select" asp-items="ViewBag.UserList">
                <option value="">-- select --</option>
            </select>
        </div>

        <div class="col-md-3">
            <label asp-for="ExpeditionDate" class="form-label">Expedition date</label>
            <input asp-for="ExpeditionDate" class="form-control" type="date" />
        </div>

        <div class="col-md-3 d-flex align-items-end">
            <div class="form-check">
                <input asp-for="IsBuyOrder" class="form-check-input" />
                <label asp-for="IsBuyOrder" class="form-check-label"></label>
            </div>
        </div>
    </div>

    <hr class="my-4" />

    <h6 class="fw-bold mb-3">Items</h6>

    <select id="GoodOptions" class="d-none" asp-items="ViewBag.GoodList"></select>

    <table class="table table-sm align-middle" id="itemsTable">
        <thead>
            <tr>
                <th>Good</th>
                <th class="text-end">Qty</th>
                <th></th>
            </tr>
        </thead>
        <tbody id="itemsBody">
            @for (int i = 0; i < Model.Items.Count; i++)
            {
                <partial name="_OrderItemRow" model="Model.Items[i]" />
            }
        </tbody>
    </table>

    <button type="button" class="btn btn-sm btn-gradient-gray mb-3" id="addRowBtn">+ Add item</button>

    <div class="text-end mt-3">
        <button type="submit" class="btn btn-gradient-blue">Create</button>
        <button type="button" class="btn btn-gradient-gray" data-bs-dismiss="modal">Cancel</button>
    </div>
</form>

@section Scripts {
    <script>
        // === Add dynamic rows ===
        (function () {
            const addBtn = document.getElementById('addRowBtn');
            const body = document.getElementById('itemsBody');
            const goodOptionsHtml = document.getElementById('GoodOptions').innerHTML;

            addBtn.addEventListener('click', function () {
                const index = body.querySelectorAll('tr').length;
                const row = document.createElement('tr');
                row.innerHTML =
                    '<td><select name="Items[' + index + '].GoodId" class="form-select">' + goodOptionsHtml + '</select></td>' +
                    '<td><input name="Items[' + index + '].Quantity" class="form-control text-end" type="number" value="1" min="1" /></td>' +
                    '<td><button type="button" class="btn btn-sm btn-gradient-red" onclick="this.closest(\'tr\').remove()">Remove</button></td>';
                body.appendChild(row);
            });
        })();

        // === Load warehouses dynamically ===
        (function () {
            const companySel = document.getElementById('CompanySelect');
            const warehouseSel = document.getElementById('WarehouseSelect');
            const preselected = warehouseSel.getAttribute('data-selected');

            async function loadWarehouses(companyId, selectedValue) {
                warehouseSel.innerHTML = '<option>Loading...</option>';
                try {
                    const resp = await fetch(`/Orders/WarehousesForCompany?companyId=${companyId}`);
                    const data = await resp.json();
                    warehouseSel.innerHTML = '<option value="">-- select --</option>';
                    data.forEach(w => {
                        const opt = document.createElement('option');
                        opt.value = w.id;
                        opt.textContent = w.name;
                        if (selectedValue == w.id) opt.selected = true;
                        warehouseSel.appendChild(opt);
                    });
                } catch {
                    warehouseSel.innerHTML = '<option>Failed to load</option>';
                }
            }

            companySel.addEventListener('change', () => {
                loadWarehouses(companySel.value, null);
            });

            if (companySel.value) {
                loadWarehouses(companySel.value, preselected);
            }
        })();
    </script>
}
